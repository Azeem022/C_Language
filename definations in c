#What is Array in C?
An Array is a group of similar types of elements. It has a contiguous memory location. It makes the code optimized, easy to traverse and easy to sort. The size and type of arrays cannot be changed after its declaration.
# What is C language?
C is a mid-level and procedural programming language. The Procedural programming language is also known as the structured programming language is a technique in which large programs are broken down into smaller modules, and each module uses structured code
#When was C language developed?
C language was developed in 1972 at bell laboratories of AT&T by Danish Ritche.
#WHAT IS STATIC VARIABLE ?
A variable which is declared as static is known as a static variable. The static variable retains its value between multiple function calls.
EXAMPLE:    #include<stdio.h>
int main()
{
	func();
	func();
	return 0;
}
void func()
{
	int a=10;
	static b=20;
	a++;                                                          OUTPUT IS:        IN 1ST TIME RUN A=11, B=21
	b++;                                                                            IN SECOND TIME RUN A=11, B=22
	printf("%d\n",a);
	printf("%d\n",b);
}
#What is the use of the function in C?
C functions are used to avoid the rewriting the same code again and again in our program.
C functions can be called any number of times from any place of our program.
C functions provide the reusability concept, i.e., it breaks the big task into smaller tasks so that it makes the C program more understandable.
#WHAT IS CALL BY VALUE ?
When a copy of the value is passed to the function, then the original value is not modified.
EXAMPLE:
#include<stdio.h>
void swap (int a, int b);
int main()
{
	int a,b;
	printf("entre two number a & b :");
	scanf("%d %d",&a,&b);
	swap(a,b);
	printf("main function a=%d b=%d",a,b);
	return 0;
}                                                                                  AFTER SWAPPING
void swap (int a, int b)                          OUTPUT IS :SUPPOSE WE GIVE INPUT A=12, & B=21  MAIN VALUE 
{                                                                                  A=21, & B=12   CALLING VALUE
	int temp;
	temp=a;
	a=b;
	b=temp;
	printf("calling function a=%d b=%d",a,b);
	
}  
# CALL BY REFERENCE:
When a copy of the value is passed to the function, then the original value is modified.
EXAMPLE:
#include<stdio.h>
void swap (int *p, int *q);
int main()
{
	int a=100,b=200;
	swap(&a,&b);
	printf("a=%d b=%d",a,b);
	return 0;
}
void swap (int *p, int *q)
{
	int temp;
	temp=*p;                                        OUTPUT IS :      P=200, & Q=100
	*p=*q;                                                           A=200, & B=100
	*q=temp;
	printf("calling function p=%d q=%d",*p,*q);
	
}
#WHAT IS POINTER IN C?
 variables that hold the address of another variable this is called pointer variable.
#What is dangling pointer in C?
If a pointer is pointing any memory location, but meanwhile another pointer deletes the memory occupied by the first pointer while the first pointer still points to that memory location, the first pointer will be known as a dangling pointer. This problem is known as a dangling pointer problem.
 #What is pointer to pointer in C?
In case of a pointer to pointer concept, one pointer refers to the address of another pointer. The pointer to pointer is a chain of pointers. Generally, the pointer contains the address of a variable. The pointer to pointer contains the address of a first pointer. Let's understand this concept through an example:

#include <stdio.h>  
 int main()  
{  
    int a=10;  
    int *ptr,**pptr; // *ptr is a pointer and **pptr is a double pointer.  
    ptr=&a;  
    pptr=&ptr;  
    printf("value of a is:%d",a);  
    printf("\n");  
    printf("value of *ptr is : %d",*ptr);  
    printf("\n");  
    printf("value of **pptr is : %d",**pptr);  
    return 0;  
}  
#What is static memory allocation?
In case of static memory allocation, memory is allocated at compile time, and memory can't be increased while executing the program. It is used in the array
The static memory is faster than dynamic memory.
EXAMPLE     
         For example:  
         int a[10];  
#What is dynamic memory allocation?
In case of dynamic memory allocation, memory is allocated at runtime and memory can be increased while executing the program. It is used in the linked list.
The malloc() or calloc() function is required to allocate the memory at the runtime.
EXAMPLE      
       For example  
                 int *p= malloc(sizeof(int)*10); 
#What functions are used for dynamic memory allocation in C language?
#malloc()
The malloc() function is used to allocate the memory during the execution of the program.
It does not initialize the memory but carries the garbage value.
It returns a null pointer if it could not be able to allocate the requested space.
Syntax

ptr = (cast-type*) malloc(byte-size) // allocating the memory using malloc() function.  
calloc()
#The calloc() is same as malloc() function, but the difference only is that it initializes the memory with zero value.
Syntax

ptr = (cast-type*)calloc(n, element-size);// allocating the memory using calloc() function.  
#DIFFERENCE BETWEEN MALLOC() AND CALLOC()
CALLOC():It initialise the content of the memory with zero.
MALLOC(): It does not initialise the content of the memory, So it carries the garbage value.
#What is a token?
The Token is an identifier. It can be constant, keyword, string literal, etc. A token is the smallest individual unit in a program. C has the following tokens:

Identifiers: Identifiers refer to the name of the variables.
Keywords: Keywords are the predefined words that are explained by the compiler.
Constants: Constants are the fixed values that cannot be changed during the execution of a program.
Operators: An operator is a symbol that performs the particular operation.
Special characters: All the characters except alphabets and digits are treated as special characters.
Strings: Strings in C are an array of characters that end with a null character (â€˜\0). Null character indicates the end of the string; 
# STRING FUNCTIONS:
-scanf(): can't input multiwords string with space,so we have to use gets,puts and fgets instead of scanf():
-gets(str):input a string even multiwords.
-puts(str):output a string.
-fgets(str,n,file):stop when n-1 char input or new line is entre
string-array-pointers, so these all three are can work as a pointer 
